/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    ArrayList<Integer> arr = new ArrayList<Integer>();
    public boolean isValidBST(TreeNode root) {
        inOrder(root);
        boolean ans=isSorted(arr);
        return ans;
    }

    private void inOrder(TreeNode node) {
        if (node == null) {
        return;
        }
        inOrder(node.left);
        arr.add(node.val);
        
        inOrder(node.right);
    }

    private boolean isSorted(ArrayList<Integer> arr){
        for(int i=0;i<arr.size()-1;i++){
            if(arr.get(i)<arr.get(i+1)){
                continue;
            }
            else{
                return false;
            }

        }
        return true;
    }


}
